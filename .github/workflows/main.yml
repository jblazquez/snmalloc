name: snmalloc CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, snmalloc1 ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  qemu-crossbuild:
    strategy:
      matrix:
        build-type: [ Release, Debug ]
        arch:
          - name: riscv64-1
            system-processor: riscv64
            triple: riscv64-linux-gnu
            rtld: ld-linux-riscv64-lp64d.so.1
            extra-packages: binutils-riscv64-linux-gnu
            ld-flavour: bfd
            ld: /usr/bin/riscv64-linux-gnu-ld.bfd
            host-os: ubuntu-latest
          - name: riscv64-2
            system-processor: riscv64
            triple: riscv64-linux-gnu
            rtld: ld-linux-riscv64-lp64d.so.1
            extra-packages: binutils-riscv64-linux-gnu
            ld-flavour: bfd
            ld: /usr/bin/riscv64-linux-gnu-ld.bfd
            host-os: ubuntu-latest
          - name: riscv64-3
            system-processor: riscv64
            triple: riscv64-linux-gnu
            rtld: ld-linux-riscv64-lp64d.so.1
            extra-packages: binutils-riscv64-linux-gnu
            ld-flavour: bfd
            ld: /usr/bin/riscv64-linux-gnu-ld.bfd
            host-os: ubuntu-latest
      # Don't abort runners if a single one fails
      fail-fast: false
    runs-on: ${{matrix.arch.host-os}}
    name: ${{matrix.build-type}} cross-build for ${{ matrix.arch.triple }}
    steps:
    - uses: actions/checkout@v3
    - name: "Install cross-compile toolchain and QEMU (ubuntu-20.04)"
      # Install the dependencies and clang 13.  Earlier versions of clang don't
      # find the multilib things for this week's Ubuntu filesystem layout.
      if: matrix.arch.host-os == 'ubuntu-20.04'
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository "deb http://apt.llvm.org/focal/     llvm-toolchain-focal-13  main"
        sudo apt update
        sudo apt install libstdc++-9-dev-${{ matrix.arch.name }}-cross qemu-user ninja-build clang-13 lld-13
        sudo apt install ${{matrix.arch.extra-packages}}
    - name: "Install cross-compile toolchain and QEMU (ubuntu-latest)"
      if: matrix.arch.host-os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt install libstdc++-12-dev-${{ matrix.arch.name }}-cross qemu-user ninja-build
        sudo apt install ${{matrix.arch.extra-packages}}
    - name: Reconfigure for PowerPC64LE
      if: startsWith(matrix.arch.triple, 'powerpc64le')
      # The default PowerPC qemu configuration uses the wrong page size.
      # Wrap it in a script that fixes this.
      run: |
        sudo update-binfmts --disable qemu-ppc64le
        sudo sh -c 'echo ":qemu-ppc64le:M:0:\x7f\x45\x4c\x46\x02\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x15\x00:\xff\xff\xff\xff\xff\xff\xff\xfc\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\x00:`pwd`/ppc64.sh:" > /proc/sys/fs/binfmt_misc/register'
        echo '#!/bin/sh' > ppc64.sh
        echo '/usr/bin/qemu-ppc64le -p 65536 $@' >> ppc64.sh
        chmod +x ppc64.sh
    - name: Configure
      env:
        SNMALLOC_CI_CLANG_VERSION: ${{ (matrix.arch.host-os == 'ubuntu-latest') && 14 || 13 }}
        RTLD_NAME: ${{ matrix.arch.rtld }}
        ARCH: ${{ matrix.arch.system-processor }}
        TRIPLE: ${{ matrix.arch.triple}}
      run: >
        cmake
        -B ${{github.workspace}}/build
        -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
        -G Ninja
        -DSNMALLOC_CI_BUILD=ON
        -DSNMALLOC_QEMU_WORKAROUND=ON
        -DSNMALLOC_STATIC_LIBRARY=OFF
        -DCMAKE_TOOLCHAIN_FILE=ci/Toolchain.cmake
        -DSNMALLOC_LINKER=${{matrix.arch.ld}}
        -DSNMALLOC_LINKER_FLAVOUR=${{matrix.arch.ld-flavour}}
    - name: Build
      working-directory: ${{github.workspace}}/build
      run: NINJA_STATUS="%p [%f:%s/%t] %o/s, %es" ninja
    # For debugging: verify that we've actually cross-compiled.
    - name: Run `file` for inspection
      working-directory: ${{github.workspace}}/build
      run: file func*
    # Run the tests, skipping the -malloc and perf- tests (perf doesn't make
    # sense in an emulator and the pass-through malloc is slightly flaky in
    # QEMU)
    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -j 2 --output-on-failure -E '(perf-.*)|(.*-malloc$)' --timeout 400
      timeout-minutes: 30


  all-checks:
    needs: [qemu-crossbuild]
    runs-on: ubuntu-latest
    steps:
    - name: Dummy step
      run: true
